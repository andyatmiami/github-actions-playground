name: Sub-Issue Slash Command Handler

on:
  issue_comment:
    types: [created]

permissions:
  issues: write

env:
    GH_TOKEN: ${{ github.token }}

jobs:
  handle-sub-issue-command:
    if: github.event.issue.pull_request == null  # âœ… Only trigger on issues, not PRs
    runs-on: ubuntu-latest

    steps:
      - name: Write comment body to file
        run: |
          echo "${{ github.event.comment.body }}" > comment.txt

      - name: Parse and act on slash commands
        run: |
          set -euo pipefail

          gh_owner="${GITHUB_REPOSITORY%/*}"
          gh_repo_name="${GITHUB_REPOSITORY#*/}"

          parent_issue_number=${{ github.event.issue.number }}
          parent_issue_node_id=$(gh api graphql -f query="
            query {
              repository(owner: \"$gh_owner\", name: \"$gh_repo_name\") {
                issue(number: $parent_issue_number) {
                  id
                }
              }
            }" | jq -r '.data.repository.issue.id')

          echo "parent_issue_node_id: ${parent_issue_node_id}"

          while IFS= read -r line; do
            if echo "$line" | grep -qE '^/add-sub-issue'; then
              args=$(echo "$line" | sed -E 's|^/add-sub-issue *||')
              for issue in $args; do

                child_issue_number=$(echo "$issue" | sed 's/^#//')
                child_issue_node_id=$(gh api graphql -f query="
                  query {
                    repository(owner: \"$gh_owner\", name: \"$gh_repo_name\") {
                      issue(number: $child_issue_number) {
                        id
                      }
                    }
                  }" | jq -r '.data.repository.issue.id')
                echo "child_issue_node_id: ${child_issue_node_id}"

                gh api graphql -f query="
                  mutation {
                    addSubIssue(input: {
                      issueId: \"$parent_issue_node_id\",
                      subIssueId: \"$child_issue_node_id\"
                    }) {
                      clientMutationId
                      issue {
                        id
                        title
                      }
                      subIssue {
                        id
                        title
                      }
                    }
                  }"

              done
            fi
          done < comment.txt
